{"ast":null,"code":"var _jsxFileName = \"/Users/kimhaneul/GitHub/learn_react/test/src/App.js\";\nimport React, { Component } from 'react';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport TodoTemplate from './components/TodoTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 3;\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: 'hello',\n        checked: false\n      }, {\n        id: 1,\n        text: 'world',\n        checked: true\n      }, {\n        id: 2,\n        text: '!!',\n        checked: false\n      }]\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        // input 태그에 입력된 값을 state의 input으로 넘긴다.\n        input: e.target.value\n      });\n    };\n\n    this.handleCreate = () => {\n      const {\n        input,\n        todos\n      } = this.state;\n      this.setState({\n        input: '',\n        // 기존의 todos 배열에 값을 추가하여 새로운 배열을 반환한다.\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === 'Enter') {\n        // Enter 키를 눌러도 Create 버튼을 누른 것과 같이 동작한다.\n        this.handleCreate();\n      }\n    };\n\n    this.handleToggle = id => {\n      const {\n        todos\n      } = this.state;\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index];\n      const nextTodos = [...todos];\n      nextTodos[index] = { ...selected,\n        checked: !selected.checked\n      };\n      this.setState({\n        todos: nextTodos\n      });\n    };\n  }\n\n  render() {\n    const {\n      input,\n      todos\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress\n    } = this;\n    return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n      form: /*#__PURE__*/_jsxDEV(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this),\n      items: /*#__PURE__*/_jsxDEV(TodoItemList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kimhaneul/GitHub/learn_react/test/src/App.js"],"names":["React","Component","Form","TodoItemList","TodoTemplate","App","id","state","input","todos","text","checked","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport TodoTemplate from './components/TodoTemplate';\n\nclass App extends Component {\n\n  id = 3\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: 'hello', checked: false },\n      { id: 1, text: 'world', checked: true },\n      { id: 2, text: '!!', checked: false }\n    ]\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      // input 태그에 입력된 값을 state의 input으로 넘긴다.\n      input: e.target.value\n    });\n  }\n\n  handleCreate = () => {\n    const { input, todos } = this.state;\n    this.setState({\n      input: '',\n      // 기존의 todos 배열에 값을 추가하여 새로운 배열을 반환한다.\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false\n      })\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if(e.key === 'Enter') {\n      // Enter 키를 눌러도 Create 버튼을 누른 것과 같이 동작한다.\n      this.handleCreate();\n    }\n  }\n\n  // ?\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const nextTodos = [...todos];\n\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove\n\n  render() {\n    const { input, todos } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress\n    } = this;\n\n    return (\n      <TodoTemplate \n        form={\n          <Form \n            value={input}\n            onKeyPress={handleKeyPress}\n            onChange={handleChange}\n            onCreate={handleCreate} />\n        } \n        items={\n          <TodoItemList todos={ todos }/>\n        } />\n    );\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}