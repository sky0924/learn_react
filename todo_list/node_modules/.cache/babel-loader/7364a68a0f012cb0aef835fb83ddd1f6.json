{"ast":null,"code":"var _jsxFileName = \"/Users/kimhaneul/GitHub/learn_react/todo_list/src/App.js\";\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.id = 3;\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: ' 영화 웹 서비스 만들기 (with nomad coders)',\n        checked: false\n      }, {\n        id: 1,\n        text: ' 나만의 ToDoList 만들기',\n        checked: true\n      }, {\n        id: 2,\n        text: ' 다음은 무엇?',\n        checked: false\n      }]\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value // input 의 다음 바뀔 값\n\n      });\n    };\n\n    this.handleCreate = () => {\n      const {\n        input,\n        todos\n      } = this.state;\n      this.setState({\n        input: '',\n        // 인풋 비우고\n        // concat 을 사용하여 배열에 추가\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n\n    this.handleKeyPress = e => {\n      // 눌려진 키가 Enter 면 handleCreate 호출\n      if (e.key === 'Enter') {\n        this.handleCreate();\n      }\n    };\n\n    this.handleToggle = id => {\n      const {\n        todos\n      } = this.state;\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index];\n      const nextTodos = [...todos];\n      nextTodos[index] = { ...selected,\n        checked: !selected.checked\n      };\n      this.setState({\n        todos: nextTodos\n      });\n    };\n\n    this.handleRomove = id => {\n      const {\n        todos\n      } = this.state;\n      this.setState({\n        todos: todos.filter()\n      });\n    };\n  }\n\n  render() {\n    const {\n      input,\n      todos\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle\n    } = this;\n    return /*#__PURE__*/_jsxDEV(TodoListTemplate, {\n      form: /*#__PURE__*/_jsxDEV(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(TodoItemList, {\n        todos: todos,\n        onToggle: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kimhaneul/GitHub/learn_react/todo_list/src/App.js"],"names":["React","Component","TodoListTemplate","Form","TodoItemList","App","id","state","input","todos","text","checked","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","handleRomove","filter","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\n\n\nclass App extends Component {\n\n  id = 3 // 이미 0,1,2 가 존재하므로 3으로 설정\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: ' 영화 웹 서비스 만들기 (with nomad coders)', checked: false },\n      { id: 1, text: ' 나만의 ToDoList 만들기', checked: true },\n      { id: 2, text: ' 다음은 무엇?', checked: false }\n    ]\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value // input 의 다음 바뀔 값\n    });\n  }\n\n  handleCreate = () => {\n    const { input, todos } = this.state;\n    this.setState({\n      input: '', // 인풋 비우고\n      // concat 을 사용하여 배열에 추가\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false\n      })\n    });\n  }\n\n  handleKeyPress = (e) => {\n    // 눌려진 키가 Enter 면 handleCreate 호출\n    if(e.key === 'Enter') {\n      this.handleCreate();\n    }\n  }\n\n  handleToggle = (id) => {\n    const {todos} = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const nextTodos = [...todos];\n\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRomove = (id) => {\n    const {todos} = this.state;\n    this.setState({\n      todos: todos.filter()\n    })\n  }\n\n  render() {\n    const { input, todos } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle\n    } = this;\n\n    return (\n      <TodoListTemplate form={(\n        <Form \n          value={input}\n          onKeyPress={handleKeyPress}\n          onChange={handleChange}\n          onCreate={handleCreate}\n        />\n      )}>\n        <TodoItemList todos={todos} onToggle={handleToggle} />\n      </TodoListTemplate>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}