{"ast":null,"code":"import _objectSpread from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Form from'../components/Form';import Palette from'../components/Palette';import TodoItemList from'../components/TodoItemList';import TodoTemplate from'../components/TodoTemplate';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var colors=['#000000','#1d3557','#6b705c','#ff6b6b'];var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={input:'',todos:[{id:0,text:'할 일 1. Redux 이해 및 적용하기 ⭐️⭐️⭐️⭐️⭐️',checked:false},{id:1,text:'할 일 2. react-router-dom 이용하기 ⭐️⭐️⭐️',checked:true},{id:2,text:'할 일 3. image upload 기능 구현하기 ⭐️⭐️',checked:true},{id:3,text:'할 일 4. color 추가 및 삭제 기능 구현하기',checked:false},{id:4,text:'할 일 5. user id 및 password 입력 form 만들기 ⭐️',checked:true},{id:5,text:\"\\uD560 \\uC77C 6. \\uB450 \\uC904\\uC774 \\uB118\\uC5B4\\uAC00\\uBA74 \\uC5B4\\uB5BB\\uAC8C \\uB418\\uB294\\uC9C0 \\uD14C\\uC2A4\\uD2B8\\uD560 \\uC544\\uC8FC \\uAE38\\uB2E4\\uB797\\uACE0 \\uAE38\\uB2E4\\uB780 \\uBB38\\uC7A5, \\n          \\uD06C\\uAC8C \\uB098\\uC058\\uC9C4 \\uC54A\\uC740\\uB370 check-mark\\uAC00 toggle \\uC804\\uD658\\uB420 \\uB54C\\uB9C8\\uB2E4 items\\uC758 width\\uAC00 \\uBCC0\\uD654\\uD568\",checked:true},{id:6,text:'할 일 7. GitHub Page 만들기',checked:true}],color:''};_this.handleChange=function(e){_this.setState({input:e.target.value});};_this.handleCreate=function(){var _this$state=_this.state,input=_this$state.input,todos=_this$state.todos,color=_this$state.color;_this.setState({input:'',todos:todos.concat({id:todos.length,text:input,checked:false,color:color})});};_this.handleKeyPress=function(e){if(e.key==='Enter'){_this.handleCreate();}};_this.handleToggle=function(id){var todos=_this.state.todos;var index=todos.findIndex(function(todo){return todo.id===id;});var selected=todos[index];var nextTodos=_toConsumableArray(todos);nextTodos[index]=_objectSpread(_objectSpread({},selected),{},{checked:!selected.checked});_this.setState({todos:nextTodos});};_this.handleRemove=function(id){var todos=_this.state.todos;_this.setState({todos:todos.filter(function(todo){return todo.id!==id;})});};_this.handleSelectColor=function(color){_this.setState({color:color});};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this$state2=this.state,input=_this$state2.input,todos=_this$state2.todos,color=_this$state2.color;var handleChange=this.handleChange,handleCreate=this.handleCreate,handleKeyPress=this.handleKeyPress,handleToggle=this.handleToggle,handleRemove=this.handleRemove,handleSelectColor=this.handleSelectColor;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(TodoTemplate,{form:/*#__PURE__*/_jsx(Form,{value:input,onKeyPress:handleKeyPress,onChange:handleChange,onCreate:handleCreate,color:color}),items:/*#__PURE__*/_jsx(TodoItemList,{todos:todos,onToggle:handleToggle,onRemove:handleRemove}),palette:/*#__PURE__*/_jsx(Palette,{colors:colors,selected:color,onSelect:handleSelectColor})})});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/kimhaneul/GitHub/learn_react/todo_list/src/routes/Home.js"],"names":["React","Component","Form","Palette","TodoItemList","TodoTemplate","colors","App","state","input","todos","id","text","checked","color","handleChange","e","setState","target","value","handleCreate","concat","length","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","handleRemove","filter","handleSelectColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from '../components/Form';\nimport Palette from '../components/Palette';\nimport TodoItemList from '../components/TodoItemList';\nimport TodoTemplate from '../components/TodoTemplate';\n\nconst colors = ['#000000','#1d3557', '#6b705c', '#ff6b6b'];\n\nclass App extends Component {\n\n  /*\n  😯! id = 7\n    id의 초기값을 왜 설정해주는 걸까? \n    -> 마지막 id 값을 알 수 없기 때문임\n    -> todos.length로 항상 마지막의 id 값이 세팅되도록 함\n  */\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: '할 일 1. Redux 이해 및 적용하기 ⭐️⭐️⭐️⭐️⭐️', checked: false },\n      { id: 1, text: '할 일 2. react-router-dom 이용하기 ⭐️⭐️⭐️', checked: true },\n      { id: 2, text: '할 일 3. image upload 기능 구현하기 ⭐️⭐️', checked: true },\n      { id: 3, text: '할 일 4. color 추가 및 삭제 기능 구현하기', checked: false },\n      { id: 4, text: '할 일 5. user id 및 password 입력 form 만들기 ⭐️', checked: true },\n      { id: 5, \n        text: `할 일 6. 두 줄이 넘어가면 어떻게 되는지 테스트할 아주 길다랗고 길다란 문장, \n          크게 나쁘진 않은데 check-mark가 toggle 전환될 때마다 items의 width가 변화함`, \n        checked: true },\n      { id: 6, text: '할 일 7. GitHub Page 만들기', checked: true }\n    ],\n    color: ''\n  }\n\n  // 😯! input 태그에 입력된 값을 state의 input으로 넘긴다.\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  /*\n  😯!\n    input: '' \n    -> input을 비운다.(초기화)\n\n    그러면 빈 값인 상태로 배열에 추가되지 않을까? \n    -> 배열에 추가되는 객체에는 text: input으로 state에서 값을 불러와 넣어주고,\n      비워지는 input은 실제로 사용자들이 입력하는 input 태그를 말한다.\n    \n    todos.concat(...) \n    -> 기존의 배열에 새로운 객체를 추가한 새로운 배열을 반환한다.\n  */\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      input: '',\n      todos: todos.concat({\n        id: todos.length,\n        text: input,\n        checked: false,\n        color\n      })\n    });\n  }\n\n  // 😯! Enter 키를 눌러도 Create 버튼을 누른 것과 같이 동작한다.\n  handleKeyPress = (e) => {\n    if(e.key === 'Enter') {\n      this.handleCreate();\n    }\n  }\n\n  // 🤔? 어지럽다.\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const nextTodos = [...todos];\n\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n    \n\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleSelectColor = (color) => {\n    this.setState({\n      color\n    })\n  }\n\n  render() {\n    const { input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n\n    return (\n      <>\n      <TodoTemplate \n        form={(\n          <Form \n            value={ input }\n            onKeyPress={ handleKeyPress }\n            onChange={ handleChange }\n            onCreate={ handleCreate }\n            color={ color } />\n        )} \n        items={(\n          <TodoItemList \n            todos={ todos }\n            onToggle={ handleToggle }\n            onRemove={ handleRemove } />\n        )}\n        palette={(\n          <Palette colors={ colors } selected={ color } onSelect={ handleSelectColor } />\n        )} />\n        </>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}