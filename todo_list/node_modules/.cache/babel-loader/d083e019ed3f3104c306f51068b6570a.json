{"ast":null,"code":"import _objectSpread from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kimhaneul/GitHub/learn_react/todo_list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Form from'../components/Form';import Palette from'../components/Palette';import TodoItemList from'../components/TodoItemList';import TodoTemplate from'../components/TodoTemplate';import{jsx as _jsx}from\"react/jsx-runtime\";var colors=['#000000','#1d3557','#6b705c','#ff6b6b'];var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.id=6;_this.state={input:'',todos:[{id:0,text:'할 일 1. Redux 이해하기',checked:false},{id:1,text:'할 일 2. react-router-dom 이용하기',checked:true},{id:2,text:'할 일 3. image upload 기능 구현하기',checked:false},{id:3,text:'할 일 4. color 추가 및 삭제 기능 구현하기',checked:false},{id:4,text:'할 일 5. user id 및 password 입력 form 만들기',checked:false},{id:5,text:'할 일 6. 두 줄이 넘어가면 어떻게 되는지 테스트할 아주 길다랗고 길다란 문장, 보기에 나쁘진 않은데 check-mark가 toggle 전환될 때마다 width가 변화함',checked:false}],color:''};_this.handleChange=function(e){_this.setState({// input 태그에 입력된 값을 state의 input으로 넘긴다.\ninput:e.target.value});};_this.handleCreate=function(){var _this$state=_this.state,input=_this$state.input,todos=_this$state.todos,color=_this$state.color;_this.setState({// input을 비운다. 🤔? 빈 값이 배열에 추가되는 건 아닐까?\ninput:'',// 기존의 todos 배열에 값을 추가하여 새로운 배열을 반환한다.\ntodos:todos.concat({id:_this.id++,text:input,checked:false,color:color})});};_this.handleKeyPress=function(e){if(e.key==='Enter'){// Enter 키를 눌러도 Create 버튼을 누른 것과 같이 동작한다.\n_this.handleCreate();}};_this.handleToggle=function(id){var todos=_this.state.todos;var index=todos.findIndex(function(todo){return todo.id===id;});var selected=todos[index];var nextTodos=_toConsumableArray(todos);nextTodos[index]=_objectSpread(_objectSpread({},selected),{},{checked:!selected.checked});_this.setState({todos:nextTodos});};_this.handleRemove=function(id){var todos=_this.state.todos;_this.setState({todos:todos.filter(function(todo){return todo.id!==id;})});};_this.handleSelectColor=function(color){_this.setState({color:color});};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this$state2=this.state,input=_this$state2.input,todos=_this$state2.todos,color=_this$state2.color;var handleChange=this.handleChange,handleCreate=this.handleCreate,handleKeyPress=this.handleKeyPress,handleToggle=this.handleToggle,handleRemove=this.handleRemove,handleSelectColor=this.handleSelectColor;return/*#__PURE__*/_jsx(TodoTemplate,{form:/*#__PURE__*/_jsx(Form,{value:input,onKeyPress:handleKeyPress,onChange:handleChange,onCreate:handleCreate,color:color}),items:/*#__PURE__*/_jsx(TodoItemList,{todos:todos,onToggle:handleToggle,onRemove:handleRemove}),palette:/*#__PURE__*/_jsx(Palette,{colors:colors,selected:color,onSelect:handleSelectColor})});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/kimhaneul/GitHub/learn_react/todo_list/src/routes/Home.js"],"names":["React","Component","Form","Palette","TodoItemList","TodoTemplate","colors","App","id","state","input","todos","text","checked","color","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","selected","nextTodos","handleRemove","filter","handleSelectColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from '../components/Form';\nimport Palette from '../components/Palette';\nimport TodoItemList from '../components/TodoItemList';\nimport TodoTemplate from '../components/TodoTemplate';\n\nconst colors = ['#000000','#1d3557', '#6b705c', '#ff6b6b'];\n\nclass App extends Component {\n\n  // 🤔? id에 초기값을 넣어주는 걸까?\n  id = 6\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: '할 일 1. Redux 이해하기', checked: false },\n      { id: 1, text: '할 일 2. react-router-dom 이용하기', checked: true },\n      { id: 2, text: '할 일 3. image upload 기능 구현하기', checked: false },\n      { id: 3, text: '할 일 4. color 추가 및 삭제 기능 구현하기', checked: false },\n      { id: 4, text: '할 일 5. user id 및 password 입력 form 만들기', checked: false },\n      { id: 5, text: '할 일 6. 두 줄이 넘어가면 어떻게 되는지 테스트할 아주 길다랗고 길다란 문장, 보기에 나쁘진 않은데 check-mark가 toggle 전환될 때마다 width가 변화함', checked: false }\n    ],\n    color: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      // input 태그에 입력된 값을 state의 input으로 넘긴다.\n      input: e.target.value\n    });\n  }\n\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      // input을 비운다. 🤔? 빈 값이 배열에 추가되는 건 아닐까?\n      input: '',\n      // 기존의 todos 배열에 값을 추가하여 새로운 배열을 반환한다.\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false,\n        color\n      })\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if(e.key === 'Enter') {\n      // Enter 키를 눌러도 Create 버튼을 누른 것과 같이 동작한다.\n      this.handleCreate();\n    }\n  }\n\n  // 🤔? 잘 모르겠다.\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const nextTodos = [...todos];\n\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleSelectColor = (color) => {\n    this.setState({\n      color\n    })\n  }\n\n  render() {\n    const { input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n\n    return (\n      <TodoTemplate \n        form={(\n          <Form \n            value={ input }\n            onKeyPress={ handleKeyPress }\n            onChange={ handleChange }\n            onCreate={ handleCreate }\n            color={ color } />\n        )} \n        items={(\n          <TodoItemList \n            todos={ todos }\n            onToggle={ handleToggle }\n            onRemove={ handleRemove } />\n        )}\n        palette={(\n          <Palette colors={ colors } selected={ color } onSelect={ handleSelectColor } />\n        )} />\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}