{"version":3,"sources":["cloud.png","components/Form.js","components/Palette.js","components/TodoItem.js","components/TodoItemList.js","components/TodoTemplate.js","routes/Home.js","routes/Detail.js","routes/User.js","routes/Login.js","routes/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Form","value","onChange","onCreate","onKeyPress","color","className","style","onClick","Color","active","background","Palette","colors","selected","onSelect","colorList","map","TodoItem","nextProps","this","props","checked","text","id","onToggle","onRemove","e","stopPropagation","to","Component","TodoItemList","todos","todoList","TodoTemplate","form","items","palette","App","state","input","handleChange","setState","target","handleCreate","concat","length","handleKeyPress","key","handleToggle","index","findIndex","todo","nextTodos","handleRemove","filter","handleSelectColor","Detail","goHome","bind","history","push","match","params","placeholder","User","switch","goLogin","goProfile","toggleText","document","getElementById","textContent","console","log","src","require","default","alt","href","name","type","toggleTheme","Login","goBack","Profile","for","accept","img","files","formData","FormData","append","keyValue","display","path","exact","component","Home","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5189abbc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cloud.3001ba0e.png\";","import React from 'react';\nimport './Form.css';\n\nconst Form = ({ value, onChange, onCreate, onKeyPress, color }) => {\n  return (\n    <div className=\"form\">\n      <input \n        value={ value } \n        onChange={ onChange } \n        onKeyPress={ onKeyPress } \n        style={ { color } } />\n      <div className=\"create-button\" onClick={ onCreate }>\n        추가\n      </div>\n    </div>\n  );\n};\n\nexport default Form;","import React from 'react';\nimport './Palette.css';\nimport { HiOutlinePlus } from 'react-icons/hi';\n\nconst Color = ({ color, active, onClick }) => {\n  return (\n    <div\n      className={ `color ${active && 'active' }` }\n      style={ { background: color } } \n      onClick={ onClick }></div>\n  )\n}\n\nconst Palette = ({ colors, selected, onSelect }) => {\n  const colorList = colors.map(\n    (color) => (<Color \n      color={ color } \n      active={ selected===color } \n      onClick={ () => onSelect(color) } \n      key={ color }/>)\n  );\n  return (\n    <div className=\"palette\">\n      { colorList }\n      <div className=\"plus\">\n        <HiOutlinePlus />\n      </div>\n      {/* <div className=\"back\">\n        <img src=\"back.png\" alt=\"back\" />\n      </div> */}\n    </div>\n  );\n};\n\nexport default Palette;","import React, { Component } from 'react';\nimport './TodoItem.css';\nimport { RiMoreFill } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\n\nclass TodoItem extends Component {\n\n  /* \n  😯!\n    shouldComponentUpdate\n    -> 변경된 부분만 렌더링한다.\n      nextProps는 this의 props와 비교하고, \n      nextState는 this의 state와 비교하여\n      값이나 상태가 변경된 부분만 return하여 렌더링한다.\n  🤔?\n    nextState는 안쓰는데 왜 선언했을까? 선언하지 않아도 되나? \n  */\n  shouldComponentUpdate(nextProps) {\n    return this.props.checked !== nextProps.checked;\n  }\n\n  /*\n  😯!\n    `todo-text ${ checked && 'checked' }`\n    -> checked가 true면 checked라는 className을 가진다.\n\n    e.stopPropagation()\n    -> event의 버블링(확산)을 막는다.\n  */\n  render() {\n    const { text, checked, id, color, onToggle, onRemove } = this.props;\n\n    return (\n      <div className=\"todo-item\" onClick={ () => onToggle(id) }>\n        <div className=\"remove\" onClick={ (e) => {\n          e.stopPropagation();\n          onRemove(id)\n        } }>&times;</div>\n\n        <div style={ { color } } className={ `todo-text ${ checked && 'checked' }` }>\n          <div>{ text }</div>\n        </div>\n\n        {\n          checked && (<div className=\"check-mark\">&#x2713;</div>)\n        }\n\n        <Link className=\"more\" to={`/detail/${id}`}>\n          <RiMoreFill />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoItemList extends Component {\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.todos !== nextProps.todos;\n  }\n\n  render() {\n    const { todos, onToggle, onRemove } = this.props;\n\n    const todoList = todos.map(\n      ({ id, text, checked, color }) => (\n        <TodoItem\n          id={ id }\n          text={ text }\n          checked={ checked }\n          color={ color }\n          onToggle={ onToggle }\n          onRemove={ onRemove }\n          key={ id } />\n      )\n    );\n\n    return (\n      <div>\n        { todoList }\n      </div>\n    );\n  }\n}\n\nexport default TodoItemList;","import React from 'react';\nimport './TodoTemplate.css';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst TodoTemplate = ({ form, items, palette }) => {\n  return (\n    <main className=\"todo-template\">\n      <Link className=\"user-info\" to=\"./user\">\n        <FaUserCircle />\n      </Link>\n      <div className=\"title\">\n        오늘의 할 일\n      </div>\n      <section className=\"palette-wrapper\">\n        { palette }\n      </section>\n      <section className=\"form-wrapper\">\n        { form }\n      </section>\n      <section className=\"todos-wrapper\">\n        { items }\n      </section>\n    </main>\n  );\n};\n\nexport default TodoTemplate;","import React, { Component } from 'react';\nimport Form from '../components/Form';\nimport Palette from '../components/Palette';\nimport TodoItemList from '../components/TodoItemList';\nimport TodoTemplate from '../components/TodoTemplate';\n\nconst colors = ['#000000','#1d3557', '#6b705c', '#ff6b6b'];\n\nclass App extends Component {\n\n  /*\n  😯! id = 7\n    id의 초기값을 왜 설정해주는 걸까? \n    -> 마지막 id 값을 알 수 없기 때문임\n    -> todos.length로 항상 마지막의 id 값이 세팅되도록 함\n  */\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: '할 일 1. Redux 이해 및 적용하기 ⭐️⭐️⭐️⭐️⭐️', checked: false },\n      { id: 1, text: '할 일 2. react-router-dom 이용하기 ⭐️⭐️⭐️', checked: true },\n      { id: 2, text: '할 일 3. image upload 기능 구현하기 ⭐️⭐️', checked: true },\n      { id: 3, text: '할 일 4. color 추가 및 삭제 기능 구현하기', checked: false },\n      { id: 4, text: '할 일 5. user id 및 password 입력 form 만들기 ⭐️', checked: true },\n      { id: 5, \n        text: `할 일 6. 두 줄이 넘어가면 어떻게 되는지 테스트할 아주 길다랗고 길다란 문장, \n          크게 나쁘진 않은데 check-mark가 toggle 전환될 때마다 items의 width가 변화함`, \n        checked: true },\n      { id: 6, text: '할 일 7. GitHub Page 만들기', checked: true }\n    ],\n    color: ''\n  }\n\n  // 😯! input 태그에 입력된 값을 state의 input으로 넘긴다.\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  /*\n  😯!\n    input: '' \n    -> input을 비운다.(초기화)\n\n    그러면 빈 값인 상태로 배열에 추가되지 않을까? \n    -> 배열에 추가되는 객체에는 text: input으로 state에서 값을 불러와 넣어주고,\n      비워지는 input은 실제로 사용자들이 입력하는 input 태그를 말한다.\n    \n    todos.concat(...) \n    -> 기존의 배열에 새로운 객체를 추가한 새로운 배열을 반환한다.\n  */\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      input: '',\n      todos: todos.concat({\n        id: todos.length,\n        text: input,\n        checked: false,\n        color\n      })\n    });\n  }\n\n  // 😯! Enter 키를 눌러도 Create 버튼을 누른 것과 같이 동작한다.\n  handleKeyPress = (e) => {\n    if(e.key === 'Enter') {\n      this.handleCreate();\n    }\n  }\n\n  // 🤔? 어지럽다.\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const nextTodos = [...todos];\n\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n    \n\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleSelectColor = (color) => {\n    this.setState({\n      color\n    })\n  }\n\n  render() {\n    const { input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n\n    return (\n      <>\n      <TodoTemplate \n        form={(\n          <Form \n            value={ input }\n            onKeyPress={ handleKeyPress }\n            onChange={ handleChange }\n            onCreate={ handleCreate }\n            color={ color } />\n        )} \n        items={(\n          <TodoItemList \n            todos={ todos }\n            onToggle={ handleToggle }\n            onRemove={ handleRemove } />\n        )}\n        palette={(\n          <Palette colors={ colors } selected={ color } onSelect={ handleSelectColor } />\n        )} />\n        </>\n    );\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { IoArrowBackCircle } from 'react-icons/io5';\n// import { Link } from 'react-router-dom';\nimport './Detail.css';\n\nclass Detail extends Component {\n\n  constructor(props) {\n    super(props);\n    this.goHome = this.goHome.bind(this);\n  }\n\n  goHome() {\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { todos } = this.props;\n    const id = this.props.match.params.id\n\n    return (\n      <main className=\"detail\">\n        <button className=\"detail-back\" onClick={ this.goHome }>\n          <IoArrowBackCircle />\n        </button>\n        <div className=\"detail-title\">\n        {todos[id].text}\n        </div>\n        <section className=\"detail-content\">\n          <div className=\"detail-textarea\">\n            <textarea placeholder=\"내용을 입력하세요.\" />\n          \n          \n          </div>\n          <div className=\"detail-buttons\">\n            <button onClick={ this.goHome }>취소</button>\n            <button>저장</button>\n          </div>\n        </section>\n      </main>\n    );\n  }\n\n}\n\nexport default Detail;","import React, { Component } from 'react';\nimport { IoArrowBackCircle } from 'react-icons/io5';\nimport './User.css';\n\nclass User extends Component {\n\n  constructor(props) {\n    super(props);\n    this.goHome = this.goHome.bind(this);\n    this.goLogin = this.goLogin.bind(this);\n    this.goProfile = this.goProfile.bind(this);\n  }\n  \n  state = {\n    switch: 0\n  }\n\n  goHome() {\n    this.props.history.push('/');\n  }\n\n  goLogin() {\n    this.props.history.push('/login');\n  }\n\n  goProfile() {\n    this.props.history.push('/profile');\n  }\n\n  toggleTheme() {\n    const toggleText = document.getElementById('toggle-text');\n    // let toggle = this.getState();\n    // let toggle = 0;\n    // if (toggle === 0) {\n      toggleText.textContent = '🌙 Dark';\n      console.log(`ToggleText is Changed: ${toggleText.textContent} Mode`)\n    //   this.setState({\n    //     switch: 1\n    //   });\n    // } else if (toggle === 1) {\n    //   toggleText.textContent = '☀️ Light';\n    //   this.setState({\n    //     switch: 0\n    //   });\n    // }\n  }\n\n  render() {\n    return (\n      <main className=\"user\">\n        <button className=\"user-back\" onClick={ this.goHome }>\n          <IoArrowBackCircle />\n        </button>\n\n        <div className=\"user-title\">\n          나의 정보\n\n          <div className=\"user-buttons\">\n            <button onClick={ this.goLogin }>로그아웃</button>\n          </div>\n        </div>\n\n        <section className=\"user-content\">\n\n          <div className=\"user-profile\">\n            <div className=\"user-sub-title\">\n              프로필\n              <button onClick={ this.goProfile }>변경</button>\n            </div>\n            <div className=\"user-item\">\n              <div className=\"user-label mg-l-1\">사진</div>\n              <div className=\"user-input\">\n                <img src={ require(\"../cloud.png\").default } alt=\"img\" />\n              </div>\n            </div>\n            <div className=\"user-item\">\n              <div className=\"user-label mg-l-1\">이름</div>\n              <div className=\"user-input\">김하늘</div>\n            </div>\n            <div className=\"user-item\">\n              <div className=\"user-label\">이메일</div>\n              <div className=\"user-input\">sky@sngy.io</div>\n            </div>\n            <div className=\"user-item\">\n              <div className=\"user-label mg-l-1\">소개</div>\n              <div className=\"user-input\">\n                주식회사 시너지 플랫폼 개발팀 / 인턴 김하늘\n                <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                <a href=\"https://www.sngy.io\">https://www.sngy.io</a>\n                <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n                <a href=\"https://github.com/sky0924\">https://github.com/sky0924</a>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"user-setting\">\n            <div className=\"user-sub-title\">\n              설정\n            </div>\n            <div className=\"user-item\">\n              <div className=\"user-label mg-l-1\">언어</div>\n              <div className=\"user-input\">\n                <select name=\"language\">\n                  <option value=\"\">language</option>\n                  <option value=\"kor\">Korean</option>\n                  <option value=\"eng\">English</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"user-item\">\n              <div className=\"user-label mg-l-1\">테마</div>\n              <div className=\"user-input\">\n                <span id=\"toggle-text\">☀️ Light</span>\n                <label className=\"toggle\">\n                  <input id=\"toggle-check\" type=\"checkbox\" onClick={ this.toggleTheme } />\n                  <span className=\"slider round\" />\n                </label>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n    );\n  }\n\n}\n\nexport default User;\n","import React, { Component } from 'react';\nimport { IoArrowBackCircle } from 'react-icons/io5';\nimport './Login.css';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    this.props.history.push('/user');\n  }\n\n  render() {\n\n    return (\n      <main className=\"login\">\n        <button className=\"login-back\" onClick={ this.goBack }>\n          <IoArrowBackCircle />\n        </button>\n        \n        <div className=\"login-title\">\n          로그인\n        </div>\n        <section className=\"login-content\">\n          <div className=\"login-item\">\n            <div className=\"login-sub-title mg_l_2\">아이디</div>\n            <input placeholder=\"아이디를 입력해주세요.\" />\n          </div>\n          <div className=\"login-item\">\n            <div className=\"login-sub-title mg_l_1\">비밀번호</div>\n            <input placeholder=\"비밀번호를 입력해주세요.\" />\n          </div>\n\n          <div className=\"login-button\">\n            <button onClick={ this.goBack }>확인</button>\n          </div>\n        </section>\n      </main>\n    );\n  }\n\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { IoArrowBackCircle } from 'react-icons/io5';\nimport './Profile.css';\n\nclass Profile extends Component {\n\n  constructor(props) {\n    super(props);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  goBack() {\n    this.props.history.push('/user');\n  }\n  \n\n  render() {\n    const onChange = (e) => {\n      const img = e.target.files[0];\n      const formData = new FormData();\n      formData.append('img', img);\n      console.log(formData);\n      for (const keyValue of formData) console.log(keyValue);\n    }\n\n    return (\n      <main className=\"profile\">\n        <button className=\"profile-back\" onClick={ this.goBack }>\n          <IoArrowBackCircle />\n        </button>\n\n        <div className=\"profile-title\">\n          나의 정보\n        </div>\n\n        <section className=\"profile-content\">\n\n            <div className=\"profile-sub-title\">\n              프로필\n            </div>\n            <div className=\"profile-item\">\n              <div className=\"profile-label mg-l-1\">사진</div>\n              <label className=\"input-file-button\" for=\"input-file\">\n                사진 선택하기\n              </label>\n              <input \n                id=\"input-file\"\n                className=\"input_img\" \n                type='file' \n                accept='image/*' \n                name='profile_img' \n                onChange={ onChange } \n                style={ { display:\"none\" } } />\n            </div>\n            <div className=\"profile-item\">\n              <div className=\"profile-label mg-l-1\">이름</div>\n              <input placeholder=\"이름을 입력해주세요.\" />\n            </div>\n            <div className=\"profile-item\">\n              <div className=\"profile-label\">이메일</div>\n              <input placeholder=\"이메일 주소를 입력해주세요.\" />\n            </div>\n            <div className=\"profile-item\">\n              <div className=\"profile-label mg-l-1\">소개</div>\n              <input placeholder=\"자신을 간략하게 소개해주세요.\" />\n            </div>\n\n            <div className=\"profile-button\">\n              <button onClick={ this.goBack }>확인</button>\n            </div>\n        </section>\n      </main>\n    );\n  }\n\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport User from \"./routes/User\";\nimport Login from \"./routes/Login\";\nimport Profile from \"./routes/Profile\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={ Home } />\n        <Route path=\"/detail/:id\" render={(props) => <Detail  {...props} todos={[\n      { id: 0, text: '할 일 1. Redux 이해 및 적용하기 ⭐️⭐️⭐️⭐️⭐️', checked: false },\n      { id: 1, text: '할 일 2. react-router-dom 이용하기 ⭐️⭐️⭐️', checked: true },\n      { id: 2, text: '할 일 3. image upload 기능 구현하기 ⭐️⭐️', checked: true },\n      { id: 3, text: '할 일 4. color 추가 및 삭제 기능 구현하기', checked: false },\n      { id: 4, text: '할 일 5. user id 및 password 입력 form 만들기 ⭐️', checked: true },\n      { id: 5, \n        text: `할 일 6. 두 줄이 넘어가면 어떻게 되는지 테스트할 아주 길다랗고 길다란 문장, \n          크게 나쁘진 않은데 check-mark가 toggle 전환될 때마다 items의 width가 변화함`, \n        checked: true },\n      { id: 6, text: '할 일 7. GitHub Page 만들기', checked: true }\n    ]}/>}/>\n        <Route path=\"/user\" component={ User } />\n        <Route path=\"/login\" component={ Login } />\n        <Route path=\"/profile\" component={ Profile } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}