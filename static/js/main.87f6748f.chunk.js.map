{"version":3,"sources":["components/Form.js","components/Palette.js","components/TodoItem.js","components/TodoItemList.js","components/TodoTemplate.js","routes/Home.js","routes/Detail.js","routes/User.js","App.js","reportWebVitals.js","index.js"],"names":["Form","value","onChange","onCreate","onKeyPress","color","className","style","onClick","Color","active","background","Palette","colors","selected","onSelect","colorList","map","TodoItem","nextProps","nextState","this","props","checked","text","id","onToggle","onRemove","e","stopPropagation","to","Component","TodoItemList","todos","todoList","TodoTemplate","form","items","palette","App","state","input","handleChange","setState","target","handleCreate","concat","handleKeyPress","key","handleToggle","index","findIndex","todo","nextTodos","handleRemove","filter","handleSelectColor","Detail","placeholder","User","path","exact","component","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87f6748f.chunk.js","sourcesContent":["import React from 'react';\nimport './Form.css';\n\nconst Form = ({ value, onChange, onCreate, onKeyPress, color }) => {\n  return (\n    <div className=\"form\">\n      <input \n        value={ value } \n        onChange={ onChange } \n        onKeyPress={ onKeyPress } \n        style={ { color } } />\n      <div className=\"create-button\" onClick={ onCreate }>\n        추가\n      </div>\n    </div>\n  );\n};\n\nexport default Form;","import React from 'react';\nimport './Palette.css';\nimport { HiOutlinePlus } from 'react-icons/hi';\n\nconst Color = ({ color, active, onClick }) => {\n  return (\n    <div\n      className={ `color ${active && 'active' }` }\n      style={ { background: color } } \n      onClick={ onClick }></div>\n  )\n}\n\nconst Palette = ({ colors, selected, onSelect }) => {\n  const colorList = colors.map(\n    (color) => (<Color \n      color={ color } \n      active={ selected===color } \n      onClick={ () => onSelect(color) } \n      key={ color }/>)\n  );\n  return (\n    <div className=\"palette\">\n      { colorList }\n      <div className=\"plus\" onClick=\"\">\n        <HiOutlinePlus />\n      </div>\n      {/* <div className=\"back\">\n        <img src=\"back.png\" alt=\"back\" />\n      </div> */}\n    </div>\n  );\n};\n\nexport default Palette;","import React, { Component } from 'react';\nimport './TodoItem.css';\nimport { RiMoreFill } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\n\nclass TodoItem extends Component {\n\n  // 🤔? 뭘까\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.checked !== nextProps.checked;\n  }\n\n  // 🤔? `todo-text ${ checked && 'checked' }`\n  // 🤔? e.stopPropagation()\n  render() {\n    const { text, checked, id, color, onToggle, onRemove } = this.props;\n\n    return (\n      <div className=\"todo-item\" onClick={ () => onToggle(id) }>\n        <div className=\"remove\" onClick={ (e) => {\n          e.stopPropagation();\n          onRemove(id)\n        } }>&times;</div>\n\n        <div style={ { color } } className={ `todo-text ${ checked && 'checked' }` }>\n          <div>{ text }</div>\n        </div>\n\n        {\n          checked && (<div className=\"check-mark\">&#x2713;</div>)\n        }\n\n        <Link className=\"more\" to=\"./detail\">\n          <RiMoreFill />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoItemList extends Component {\n\n  // 🤔? 뭘까\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.props.todos !== nextProps.todos;\n  }\n\n  render() {\n    const { todos, onToggle, onRemove } = this.props;\n\n    const todoList = todos.map(\n      ({ id, text, checked, color }) => (\n        <TodoItem\n          id={ id }\n          text={ text }\n          checked={ checked }\n          color={ color }\n          onToggle={ onToggle }\n          onRemove={ onRemove }\n          key={ id } />\n      )\n    );\n\n    return (\n      <div>\n        { todoList }\n      </div>\n    );\n  }\n}\n\nexport default TodoItemList;","import React from 'react';\nimport './TodoTemplate.css';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst TodoTemplate = ({ form, items, palette }) => {\n  return (\n    <main className=\"todo-template\">\n      <Link className=\"user-info\" to=\"./user\">\n        <FaUserCircle />\n      </Link>\n      <div className=\"title\">\n        오늘의 할 일\n      </div>\n      <section className=\"palette-wrapper\">\n        { palette }\n      </section>\n      <section className=\"form-wrapper\">\n        { form }\n      </section>\n      <section className=\"todos-wrapper\">\n        { items }\n      </section>\n    </main>\n  );\n};\n\nexport default TodoTemplate;","import React, { Component } from 'react';\nimport Form from '../components/Form';\nimport Palette from '../components/Palette';\nimport TodoItemList from '../components/TodoItemList';\nimport TodoTemplate from '../components/TodoTemplate';\n\nconst colors = ['#000000','#1d3557', '#6b705c', '#ff6b6b'];\n\nclass App extends Component {\n\n  // 🤔? id에 초기값을 넣어주는 걸까?\n  id = 7\n\n  state = {\n    input: '',\n    todos: [\n      { id: 0, text: '할 일 1. Redux 이해 및 적용하기', checked: false },\n      { id: 1, text: '할 일 2. react-router-dom 이용하기', checked: true },\n      { id: 2, text: '할 일 3. image upload 기능 구현하기', checked: false },\n      { id: 3, text: '할 일 4. color 추가 및 삭제 기능 구현하기', checked: false },\n      { id: 4, text: '할 일 5. user id 및 password 입력 form 만들기', checked: false },\n      { id: 5, \n        text: `할 일 6. 두 줄이 넘어가면 어떻게 되는지 테스트할 아주 길다랗고 길다란 문장, \n          크게 나쁘진 않은데 check-mark가 toggle 전환될 때마다 items의 width가 변화함`, \n        checked: true },\n      { id: 6, text: '할 일 7. GitHub Page 만들기', checked: true }\n    ],\n    color: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      // input 태그에 입력된 값을 state의 input으로 넘긴다.\n      input: e.target.value\n    });\n  }\n\n  handleCreate = () => {\n    const { input, todos, color } = this.state;\n    this.setState({\n      // input을 비운다. 🤔? 빈 값이 배열에 추가되는 건 아닐까?\n      input: '',\n      // 기존의 todos 배열에 값을 추가하여 새로운 배열을 반환한다.\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        checked: false,\n        color\n      })\n    });\n  }\n\n  handleKeyPress = (e) => {\n    if(e.key === 'Enter') {\n      // Enter 키를 눌러도 Create 버튼을 누른 것과 같이 동작한다.\n      this.handleCreate();\n    }\n  }\n\n  // 🤔? 잘 모르겠다.\n  handleToggle = (id) => {\n    const { todos } = this.state;\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index];\n    const nextTodos = [...todos];\n\n    nextTodos[index] = {\n      ...selected,\n      checked: !selected.checked\n    };\n\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleSelectColor = (color) => {\n    this.setState({\n      color\n    })\n  }\n\n  render() {\n    const { input, todos, color } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleSelectColor\n    } = this;\n\n    return (\n      <TodoTemplate \n        form={(\n          <Form \n            value={ input }\n            onKeyPress={ handleKeyPress }\n            onChange={ handleChange }\n            onCreate={ handleCreate }\n            color={ color } />\n        )} \n        items={(\n          <TodoItemList \n            todos={ todos }\n            onToggle={ handleToggle }\n            onRemove={ handleRemove } />\n        )}\n        palette={(\n          <Palette colors={ colors } selected={ color } onSelect={ handleSelectColor } />\n        )} />\n    );\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { IoArrowBackCircle } from 'react-icons/io5';\nimport { Link } from 'react-router-dom';\nimport './Detail.css';\n\nclass Detail extends Component {\n\n  render() {\n    return (\n      <main className=\"detail\">\n        <Link className=\"detail-back\" to=\"/\"><IoArrowBackCircle /></Link>\n        <div className=\"detail-title\">\n          할 일 1. Redux 이해하기\n        </div>\n        <section className=\"detail-content\">\n          <div className=\"detail-textarea\">\n            <textarea placeholder=\"내용을 입력하세요.\" />\n          </div>\n        </section>\n      </main>\n    );\n  }\n\n}\n\nexport default Detail;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { IoArrowBackCircle } from 'react-icons/io5';\nimport './User.css';\n\nclass User extends Component {\n\n  render() {\n    return (\n      <main className=\"user\">\n        <Link className=\"user-back\" to=\"/\"><IoArrowBackCircle /></Link>\n        <div className=\"user-title\">\n          나의 정보\n        </div>\n        <section className=\"user-content\">\n          <div>\n            login/logout\n          </div>\n          <div>\n            information\n          </div>\n        </section>\n      </main>\n    );\n  }\n\n}\n\nexport default User;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport User from \"./routes/User\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact={ true } component={ Home } />\n      <Route path=\"/detail\" component={ Detail } />\n      <Route path=\"/user\" component={ User } />\n    </HashRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}